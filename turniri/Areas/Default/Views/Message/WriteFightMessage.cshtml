@model turniri.Models.ViewModels.FightMessageView

<div class="popup-window-big popup-window" style="display: block;">
    <div class="top-bar">
        <h3>Написать сообщение
        </h3>
        <div class="icon-close-popup9 sprite">
        </div>
        <div class="bar-arrow-down sprite">
        </div>
    </div>
    @using (Html.BeginForm("WriteMessage", "Message", FormMethod.Post, new { id = "WriteMessageForm" }))
    {
        @Html.Hidden("ReceiverID", Model.ReceiverID)
        @Html.Hidden("InitedGame", Model.InitedGame)
        @Html.Hidden("InitedReceiver", Model.InitedReceiver)
        <div class="popup-message popup-wrapper">
            @if (!Model.InitedReceiver)
            {
                <div class="popup-input-item">
                    <div class="label-name">
                        Кому
                    </div>
                    <div class="input">
                        @Html.TextBox("ReceiverLogin", Model.ReceiverLogin)
                        @Html.ValidationMessage("ReceiverLogin")
                    </div>
                </div>
            }
            else
            {
                <div class="popup-input-item">
                    <div class="label-name">
                        Кому
                    </div>
                    <div class="input">
                        @Model.ReceiverLogin
                    </div>
                </div>
            }
            @if (!Model.InitedGame)
            {
                <div class="popup-input-item">
                    <div class="label-name">
                        Платформа
                    </div>
                    <div class="input">
                        @Html.DropDownList("PlatformID", Model.PlatformSelectList)
                    </div>
                </div>
                <div id="GameWrapper">
                    @Html.Action("CreateGamesSelect", "Message", new { idPlatform = Model.PlatformSelectList.FirstOrDefault(p => p.Selected).Value, idGame = Model.GameID })
                </div>
            }
            else
            {
                @Html.Hidden("PlatformID", Model.PlatformID)
                @Html.Hidden("GameID", Model.GameID)
                <div class="popup-input-item">
                    <div class="label-name">
                        Платформа
                    </div>
                    <div class="input">
                        @Model.PlatformSelectList.First(p => p.Selected).Text
                    </div>
                </div>
                <div class="popup-input-item">
                    <div class="label-name">
                        Игра
                    </div>
                    <div class="input">
                        @Model.GamesSelectList.First(p => p.Selected).Text
                    </div>
                </div>
            }
            <div class="popup-input-item">
                <div class="label-name">
                    Кол-во игр
                </div>
                <div class="input">
                    @Html.DropDownList("CountRound", Model.CountRoundSelectList)
                </div>
            </div>
            <div class="popup-input-item">
                <div class="label-name">
                    Сообщение
                </div>
                <div class="input">
                    @Html.ValidationMessage("Text")
                    @Html.TextArea("Text", Model.Text)
                </div>
            </div>
            <div class="massage-button clear">
                <div class="gray-24-button-wrapper" id="WriteMessageButton">
                    <span>ОТПРАВИТЬ</span>
                </div>
                <div class="gray-24-button-wrapper">
                    <span class="popup-close">ОТМЕНА</span>
                </div>
            </div>
        </div>
    }
</div>
